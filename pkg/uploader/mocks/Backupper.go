// Code generated by mockery v2.10.2. DO NOT EDIT.

package mocks

import (
	logrus "github.com/sirupsen/logrus"
	corev1 "k8s.io/api/core/v1"

	mock "github.com/stretchr/testify/mock"

	v1 "github.com/vmware-tanzu/velero/pkg/apis/velero/v1"
)

// Backupper is an autogenerated mock type for the Backupper type
type Backupper struct {
	mock.Mock
}

// BackupPodVolumes provides a mock function with given fields: backup, pod, volumesToBackup, log
func (_m *Backupper) BackupPodVolumes(backup *v1.Backup, pod *corev1.Pod, volumesToBackup []string, log logrus.FieldLogger) ([]*v1.PodVolumeBackup, []error) {
	ret := _m.Called(backup, pod, volumesToBackup, log)

	var r0 []*v1.PodVolumeBackup
	if rf, ok := ret.Get(0).(func(*v1.Backup, *corev1.Pod, []string, logrus.FieldLogger) []*v1.PodVolumeBackup); ok {
		r0 = rf(backup, pod, volumesToBackup, log)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*v1.PodVolumeBackup)
		}
	}

	var r1 []error
	if rf, ok := ret.Get(1).(func(*v1.Backup, *corev1.Pod, []string, logrus.FieldLogger) []error); ok {
		r1 = rf(backup, pod, volumesToBackup, log)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]error)
		}
	}

	return r0, r1
}
